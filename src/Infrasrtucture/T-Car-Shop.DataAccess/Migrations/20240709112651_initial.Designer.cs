// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using T_Car_Shop.DataAccess.Contexts;

#nullable disable

namespace T_Car_Shop.DataAccess.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20240709112651_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarEntityUserEntity", b =>
                {
                    b.Property<Guid>("CarsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("CarsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("CarUser", (string)null);
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.BrandEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ManufacturerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.CarEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.ImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.ManufacturerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("RoleEntityId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleEntityId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarEntityUserEntity", b =>
                {
                    b.HasOne("T_Car_Shop.Core.Entities.CarEntity", null)
                        .WithMany()
                        .HasForeignKey("CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("T_Car_Shop.Core.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.BrandEntity", b =>
                {
                    b.HasOne("T_Car_Shop.Core.Entities.ManufacturerEntity", "Manufacturer")
                        .WithMany("Brands")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.CarEntity", b =>
                {
                    b.HasOne("T_Car_Shop.Core.Entities.BrandEntity", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.ImageEntity", b =>
                {
                    b.HasOne("T_Car_Shop.Core.Entities.CarEntity", "Car")
                        .WithMany("Images")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Car");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.UserEntity", b =>
                {
                    b.HasOne("T_Car_Shop.Core.Entities.RoleEntity", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleEntityId");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.BrandEntity", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.CarEntity", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.ManufacturerEntity", b =>
                {
                    b.Navigation("Brands");
                });

            modelBuilder.Entity("T_Car_Shop.Core.Entities.RoleEntity", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
